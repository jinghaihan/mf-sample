worker_processes  1;

env ACCESS_ENTRY_ORIGIN;

load_module modules/ngx_http_perl_module.so;

events {
    worker_connections  1024;
}

http {
    perl_set $ACCESS_ENTRY_ORIGIN 'sub { return $ENV{"ACCESS_ENTRY_ORIGIN"}; }';

    include       mime.types;
    default_type  application/octet-stream;

    client_max_body_size 20m;
    client_header_buffer_size 90k;
    log_format  access '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" $request_time' ;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen 8080;
        server_name  localhost;
        client_header_buffer_size 90k;

        location / {
            root /usr/share/nginx/html/dist/;
            index index.html;

            add_header Access-Control-Allow-Origin $ACCESS_ENTRY_ORIGIN;
            add_header Access-Control-Allow-Headers X-Requested-With;
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            add_header Cache-Control no-cache;
            add_header Pragma no-cache; 
            add_header Expires 0;

            if ($request_filename ~* .*\.(?:htm|html)$) {
                add_header Access-Control-Allow-Origin $ACCESS_ENTRY_ORIGIN;
                add_header Access-Control-Allow-Headers X-Requested-With;
                add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
                add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
            }
        }
        location /login {
            rewrite /login $ACCESS_ENTRY_ORIGIN/? redirect;
        }
        location ~ ^/micro-[a-zA-Z]*/$ {
            rewrite ^/micro-[a-zA-Z]*/$ $ACCESS_ENTRY_ORIGIN/? redirect;
        }
    }
}